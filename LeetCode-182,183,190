/*
182.查找重复的电子邮件
编写解决方案来报告所有重复的电子邮件。 请注意，可以保证电子邮件字段不为 NULL。
以 任意顺序 返回结果表。
*/
select Email 
from Person
group by Email
having count(Email) > 1
/*
183.从不订购的客户
找出所有从不点任何东西的顾客。
以 任意顺序 返回结果表。
*/
select Customers.name as 'Customers'
from customers
where customers.id not in (
  select customersId from Orders
);
class Solution {
/*
190.颠倒二进制位
颠倒给定的 32 位无符号整数的二进制位。
提示：
请注意，在某些语言（如 Java）中，没有无符号整数类型。在这种情况下，输入和输出都将被指定为有符号整数类型，并且不应影响您的实现，因为无论整数是有符号的还是无符号的，其内部的二进制表示形式都是相同的。
在 Java 中，编译器使用二进制补码记法来表示有符号整数。因此，在 示例 2 中，输入表示有符号整数 -3，输出表示有符号整数 -1073741825。
*/
  public int reverseBits(int n) {
    int res = 0;
    for(int i = 0; i < 32; i++) {
      res |= (n & 1) << (31 - i);
      n >>>= 1;
    }
    return res;
  }
}
